diff --git a/content/00008.md b/content/00008.md
index ede28310..29126db0 100644
--- a/content/00008.md
+++ b/content/00008.md
@@ -40,7 +40,7 @@ the transitioning period (i.e. until the old format has been retired), implement
 should pad `auth-body` with at least 100 bytes of junk data. Adding a random amount in
 range [100, 300] is recommended to vary the size of the packet.
 
-```text
+```
 auth-vsn         = 4
 auth-size        = size of enc-auth-body, encoded as a big-endian 16-bit integer
 auth-body        = rlp.list(sig, initiator-pubk, initiator-nonce, auth-vsn)
@@ -193,7 +193,7 @@ This EIP is backwards-compatible, all valid version 4 packets are still accepted
 
 devp2p hello packet advertising version 22 and containing a few additional list elements:
 
-```text
+```
 f87137916b6e6574682f76302e39312f706c616e39cdc5836574683dc6846d6f726b1682270fb840
 fda1cff674c90c9a197539fe3dfb53086ace64f83ed7c6eabec741f7f381cc803e52ab2cd55d5569
 bce4347107a310dfd5f88a010cd2ffd1005ca406f1842877c883666f6f836261720304
@@ -204,13 +204,13 @@ bce4347107a310dfd5f88a010cd2ffd1005ca406f1842877c883666f6f836261720304
 Implementations should accept the following encoded discovery packets as valid.
 The packets are signed using the secp256k1 node key
 
-```text
+```
 b71c71a67e1177ad4e901695e1b4b9ee17ae16c6668d313eac2f96dbcda3f291
 ```
 
 ping packet with version 4, additional list elements:
 
-```text
+```
 e9614ccfd9fc3e74360018522d30e1419a143407ffcce748de3e22116b7e8dc92ff74788c0b6663a
 aa3d67d641936511c8f8d6ad8698b820a7cf9e1be7155e9a241f556658c55428ec0563514365799a
 4be2be5a685a80971ddcfa80cb422cdd0101ec04cb847f000001820cfa8215a8d790000000000000
@@ -219,7 +219,7 @@ aa3d67d641936511c8f8d6ad8698b820a7cf9e1be7155e9a241f556658c55428ec0563514365799a
 
 ping packet with version 555, additional list elements and additional random data:
 
-```text
+```
 577be4349c4dd26768081f58de4c6f375a7a22f3f7adda654d1428637412c3d7fe917cadc56d4e5e
 7ffae1dbe3efffb9849feb71b262de37977e7c7a44e677295680e9e38ab26bee2fcbae207fba3ff3
 d74069a50b902a82c9903ed37cc993c50001f83e82022bd79020010db83c4d001500000000abcdef
@@ -232,7 +232,7 @@ d74069a50b902a82c9903ed37cc993c50001f83e82022bd79020010db83c4d001500000000abcdef
 
 pong packet with additional list elements and additional random data:
 
-```text
+```
 09b2428d83348d27cdf7064ad9024f526cebc19e4958f0fdad87c15eb598dd61d08423e0bf66b206
 9869e1724125f820d851c136684082774f870e614d95a2855d000f05d1648b2d5945470bc187c2d2
 216fbe870f43ed0909009882e176a46b0102f846d79020010db885a308d313198a2e037073488208
@@ -243,7 +243,7 @@ a355c6010203c2040506a0c969a58f6f9095004c0177a6b47f451530cab38966a25cca5cb58f0555
 
 findnode packet with additional list elements and additional random data:
 
-```text
+```
 c7c44041b9f7c7e41934417ebac9a8e1a4c6298f74553f2fcfdcae6ed6fe53163eb3d2b52e39fe91
 831b8a927bf4fc222c3902202027e5e9eb812195f95d20061ef5cd31d502e47ecb61183f74a504fe
 04c51e73df81f25c4d506b26db4517490103f84eb840ca634cae0d49acb401d8a4c6b6fe8c55b70d
@@ -254,7 +254,7 @@ dd7fc0c04ad9ebf3919644c91cb247affc82b69bd2ca235c71eab8e49737c937a2c396
 
 neighbours packet with additional list elements and additional random data:
 
-```text
+```
 c679fc8fe0b8b12f06577f2e802d34f6fa257e6137a995f6f4cbfc9ee50ed3710faf6e66f932c4c8
 d81d64343f429651328758b47d3dbc02c4042f0fff6946a50f4a49037a72bb550f3a7872363a83e1
 b9ee6469856c24eb4ef80b7535bcf99c0004f9015bf90150f84d846321163782115c82115db84031
@@ -274,7 +274,7 @@ d96126051913f44582e8c199ad7c6d6819e9a56483f637feaac9448aacf8599020010db885a308d3
 In these test vectors, node A initiates a connection with node B.
 The values contained in all packets are given below:
 
-```text
+```
 Static Key A:    49a7b37aa6f6645917e7b807e9d1c00d4fa71f18343b0d4122a4d2df64dd6fee
 Static Key B:    b71c71a67e1177ad4e901695e1b4b9ee17ae16c6668d313eac2f96dbcda3f291
 Ephemeral Key A: 869d6ecf5211f1cc60418a13b9d870b22959d0c16f02bec714c960dd2298a32d
@@ -284,7 +284,7 @@ Nonce B:         559aead08264d5795d3909718cdd05abd49572e84fe55590eef31a88a08fdff
 ```
 
 (Auth₁)  RLPx v4 format (sent from A to B):
-```text
+```
 048ca79ad18e4b0659fab4853fe5bc58eb83992980f4c9cc147d2aa31532efd29a3d3dc6a3d89eaf
 913150cfc777ce0ce4af2758bf4810235f6e6ceccfee1acc6b22c005e9e3a49d6448610a58e98744
 ba3ac0399e82692d67c1f58849050b3024e21a52c9d3b01d871ff5f210817912773e610443a9ef14
@@ -296,7 +296,7 @@ a4592ee77e2bd94d0be3691f3b406f9bba9b591fc63facc016bfa8
 ```
 
 (Auth₂) EIP-8 format with version 4 and no additional list elements (sent from A to B):
-```text
+```
 01b304ab7578555167be8154d5cc456f567d5ba302662433674222360f08d5f1534499d3678b513b
 0fca474f3a514b18e75683032eb63fccb16c156dc6eb2c0b1593f0d84ac74f6e475f1b8d56116b84
 9634a8c458705bf83a626ea0384d4d7341aae591fae42ce6bd5c850bfe0b999a694a49bbbaf3ef6c
@@ -311,7 +311,7 @@ c001edaeb5f8a06d2b26fb6cb93c52a9fca51853b68193916982358fe1e5369e249875bb8d0d0ec3
 ```
 
 (Auth₃) EIP-8 format with version 56 and 3 additional list elements (sent from A to B):
-```text
+```
 01b8044c6c312173685d1edd268aa95e1d495474c6959bcdd10067ba4c9013df9e40ff45f5bfd6f7
 2471f93a91b493f8e00abc4b80f682973de715d77ba3a005a242eb859f9a211d93a347fa64b597bf
 280a6b88e26299cf263b01b8dfdb712278464fd1c25840b995e84d367d743f66c0e54a586725b7bb
@@ -327,7 +327,7 @@ d490
 ```
 
 (Ack₁) RLPx v4 format (sent from B to A):
-```text
+```
 049f8abcfa9c0dc65b982e98af921bc0ba6e4243169348a236abe9df5f93aa69d99cadddaa387662
 b0ff2c08e9006d5a11a278b1b3331e5aaabf0a32f01281b6f4ede0e09a2d5f585b26513cb794d963
 5a57563921c04a9090b4f14ee42be1a5461049af4ea7a7f49bf4c97a352d39c8d02ee4acc416388c
@@ -337,7 +337,7 @@ d1497113d5c755e942d1
 ```
 
 (Ack₂) EIP-8 format with version 4 and no additional list elements (sent from B to A):
-```text
+```
 01ea0451958701280a56482929d3b0757da8f7fbe5286784beead59d95089c217c9b917788989470
 b0e330cc6e4fb383c0340ed85fab836ec9fb8a49672712aeabbdfd1e837c1ff4cace34311cd7f4de
 05d59279e3524ab26ef753a0095637ac88f2b499b9914b5f64e143eae548a1066e14cd2f4bd7f814
@@ -354,7 +354,7 @@ e754d021bfca14dc989753d61c413d261934e1a9c67ee060a25eefb54e81a4d14baff922180c395d
 ```
 
 (Ack₃) EIP-8 format with version 57 and 3 additional list elements (sent from B to A):
-```text
+```
 01f004076e58aae772bb101ab1a8e64e01ee96e64857ce82b1113817c6cdd52c09d26f7b90981cd7
 ae835aeac72e1573b8a0225dd56d157a010846d888dac7464baf53f2ad4e3d584531fa203658fab0
 3a06c9fd5e35737e417bc28c1cbf5e5dfc666de7090f69c3b29754725f84f75382891c561040ea1d
@@ -372,14 +372,14 @@ c8c2c5098dbdd28fca547b3f58c01a424ac05f869f49c6a34672ea2cbbc558428aa1fe48bbfd6115
 
 Node B derives the connection secrets for (Auth₂, Ack₂) as follows:
 
-```text
+```
 aes-secret = 80e8632c05fed6fc2a13b0f8d31a3cf645366239170ea067065aba8e28bac487
 mac-secret = 2ea74ec5dae199227dff1af715362700e989d889d7a493cb0639691efb8e5f98
 ```
 
 Running B's `ingress-mac` keccak state on the string "foo" yields the hash
 
-```text
+```
 ingress-mac("foo") = 0c7ec6340062cc46f5e9f1e3cf86f8c8c403c5a0964f5df0ebd34a75ddc86db5
 ```
 
diff --git a/content/00712/index.md b/content/00712/index.md
index 6adcc754..36f5c4f8 100644
--- a/content/00712/index.md
+++ b/content/00712/index.md
@@ -179,7 +179,7 @@ Typed data is a JSON object containing type information, domain separator parame
 ##### Example
 
 Request:
-```shell
+```bash
 curl -X POST --data '{"jsonrpc":"2.0","method":"eth_signTypedData","params":["0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826", {"types":{"EIP712Domain":[{"name":"name","type":"string"},{"name":"version","type":"string"},{"name":"chainId","type":"uint256"},{"name":"verifyingContract","type":"address"}],"Person":[{"name":"name","type":"string"},{"name":"wallet","type":"address"}],"Mail":[{"name":"from","type":"Person"},{"name":"to","type":"Person"},{"name":"contents","type":"string"}]},"primaryType":"Mail","domain":{"name":"Ether Mail","version":"1","chainId":1,"verifyingContract":"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"},"message":{"from":{"name":"Cow","wallet":"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826"},"to":{"name":"Bob","wallet":"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"},"contents":"Hello, Bob!"}}],"id":1}'
 ```
 
diff --git a/content/00868.md b/content/00868.md
index 7941ca92..a1ffbdd5 100644
--- a/content/00868.md
+++ b/content/00868.md
@@ -30,7 +30,7 @@ a new field containing the sequence number of the ENR.
 
 ### Ping Packet (0x01)
 
-```text
+```
 packet-data = [version, from, to, expiration, enr-seq]
 ```
 
@@ -39,7 +39,7 @@ retain their existing meaning.
 
 ### Pong Packet (0x02)
 
-```text
+```
 packet-data = [to, ping-hash, expiration, enr-seq]
 ```
 
@@ -48,7 +48,7 @@ retain their existing meaning.
 
 ### ENRRequest Packet (0x05)
 
-```text
+```
 packet-data = [ expiration ]
 ```
 
@@ -62,7 +62,7 @@ refers to a time in the past.
 
 ### ENRResponse Packet (0x06)
 
-```text
+```
 packet-data = [ request-hash, ENR ]
 ```
 
diff --git a/content/01682.md b/content/01682.md
index f61c0592..e4078985 100644
--- a/content/01682.md
+++ b/content/01682.md
@@ -73,7 +73,7 @@ accounts to the new format.
 
 #### Account Representation
 
-```text
+```
 account = [nonce, balance, storageroot, codehash, rentbalance, rentblock, storagesize]
 ```
 
diff --git a/content/02330/index.md b/content/02330/index.md
index 3089caa3..3b945400 100644
--- a/content/02330/index.md
+++ b/content/02330/index.md
@@ -25,7 +25,7 @@ The gas cost when reading from registry style contract such as [EIP-20s](../0002
 
 A new EVM instruction `EXTSLOAD (0x5c)` that works like `SLOAD (0x54)` but an additional parameter representing the contract that is to be read from.
 
-```shell
+```bash
 EXTSLOAD (0x5c)
 ```
 
diff --git a/content/03076.md b/content/03076.md
index 9d717172..d089052e 100644
--- a/content/03076.md
+++ b/content/03076.md
@@ -176,7 +176,7 @@ After importing an interchange file with data field `data`, a signer must respec
 
 4. Refuse to sign any attestation with source epoch less than the minimum source epoch present in that signer's attestations (as seen in `data.signed_attestations`). In pseudocode:
 
-```python3
+```python
 source.epoch <
     min(att.source_epoch
         for att in data.signed_attestations
@@ -186,7 +186,7 @@ source.epoch <
 {:start="5"}
 5. Refuse to sign any attestation with target epoch less than or equal to the minimum target epoch present in that signer's attestations (as seen in `data.signed_attestations`), except if it is a repeat signing as determined by the `signing_root`. In pseudocode:
 
-```python3
+```python
 target_epoch <=
     min(att.target_epoch
         for att in data.signed_attestations
diff --git a/content/05345/index.md b/content/05345/index.md
index 2dcd2bfb..bd81fe3c 100644
--- a/content/05345/index.md
+++ b/content/05345/index.md
@@ -41,7 +41,7 @@ The implementation introduces new RPC methods and flow for application and walle
 
 This RPC method opens the wallet and prompts the user to enable automatic signing for a specific time duration. This function grants the application to call the following methods until the timestamp expires. Standard methods like `eth_signTrancaction` remain untouched.
 
-```shell
+```bash
 Parameters
   Object: request object
     until: NUMBER - unix timesptamp, the end time the permission will be valid
@@ -59,7 +59,7 @@ Returns
 
 This RPC method creates a transaction and sends its data to the wallet for signing. The wallet signs the data in the background, interfering with no processes the user is involved in. Afterward, the application sends the signed transaction to the blockchain using Nethereum's or other libraries' `sendRawTransaction` method.
 
-```shell
+```bash
 Parameters
   DATA, 20 Bytes: permissionSecret - secret key obtained from `wallet_requestSilentSign` method
   Object - The transaction object
@@ -79,7 +79,7 @@ Returns
 
 This RPC method creates a transaction and sends it to the blockchain without interfering with the process the user is involved in.
 
-```shell
+```bash
 Parameters
   DATA, 20 Bytes: permissionSecret - secret key obtained from `wallet_requestSilentSign` method
   Object - The transaction object
diff --git a/content/05988/index.md b/content/05988/index.md
index a051feb6..2ec09a2b 100644
--- a/content/05988/index.md
+++ b/content/05988/index.md
@@ -60,7 +60,7 @@ Here are the Poseidon parameters that the precompile will support:
 
 The encoding of the precompile input is the following:
 
-```text
+```
 [32 bytes for p][2 bytes for security_level][1 byte for alpha][2 bytes for input_rate][1 byte for t][1 byte for full_round][1 byte for partial_round][input_rate * 32 bytes for input]
 ```
 
@@ -76,7 +76,7 @@ The precompile can be wrapped easily in Solidity to provide a more development-f
 
 <!--### Gas Costs
 
-```text
+```
 TODO: Fill gas costs section
 ```-->
 
diff --git a/content/07612.md b/content/07612.md
index e191f427..d5cf186d 100644
--- a/content/07612.md
+++ b/content/07612.md
@@ -37,7 +37,7 @@ The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "S
 
 ### Helper functions
 
-```python3
+```python
 # Determine if `block` is the fork activation block
 def is_fork_block(block):
     return block.parent.timestamp < FORK_TIME && block.timestamp >= FORK_TIME
@@ -77,7 +77,7 @@ def verkle_get_account(tree: VerkleTree, key: Bytes32) -> Optional[Account]:
 
 In the execution spec, modify the `State` class as such:
 
-```python3
+```python
 @dataclass
 class State:
     """
@@ -103,7 +103,7 @@ class State:
 
 And the state access functions are modified as such:
 
-```python3
+```python
 def get_account_optional(state: State, address: Address) -> Optional[Account]:
     account = verkle_get_account(state._overlay_tree, get_tree_key_for_version(addr))
     if account is not None:
@@ -136,7 +136,7 @@ def set_storage(
 
 Add the following function which is used when storing a contract in the tree:
 
-```python3
+```python
 def state_set_codechunk(state: State, addr: Address, chunk_num: int, chunk: Bytes):
     state._overlay_tree.set(get_tree_key_for_code_chunk(addr, chunk_num), chunk)
 ```
diff --git a/content/07650.md b/content/07650.md
index 2fceeffe..8207e6f5 100644
--- a/content/07650.md
+++ b/content/07650.md
@@ -35,7 +35,7 @@ The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SH
 
 As of `FORK_BLOCK_NUMBER`, a new precompile is deployed at `PREFETCH_PRECOMPILE_ADDRESS`.  The encoding of the precompile input is the following:
 
-```text
+```
 [32 bytes for local storage key length n][n * 32 bytes local storage keys][32 bytes for address length m][m * 32 bytes addresses]
 ```
 
diff --git a/content/00778.md b/content/00778.md
index 8ea1da18..fcad6526 100644
--- a/content/00778.md
+++ b/content/00778.md
@@ -124,20 +124,20 @@ supporting both protocols.
 This is an example record containing the IPv4 address `127.0.0.1` and UDP port `30303`.
 The node ID is `a448f24c6d18e575453db13171562b71999873db5b286df957af199ec94617f7`.
 
-```text
+```
 enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8
 ```
 
 The record is signed using the "v4" identity scheme using sequence number `1` and this
 private key:
 
-```text
+```
 b71c71a67e1177ad4e901695e1b4b9ee17ae16c6668d313eac2f96dbcda3f291
 ```
 
 The RLP structure of the record is:
 
-```text
+```
 [
   7098ad865b00a582051940cb9cf36836572411a47278783077011599ed5cd16b76f2635f4e234738f30813a89eb9137e3e3df5266e3a1f11df72ecf1145ccb9c,
   01,
diff --git a/content/01884/index.md b/content/01884/index.md
index 87dcf2b0..f6585a31 100644
--- a/content/01884/index.md
+++ b/content/01884/index.md
@@ -138,7 +138,7 @@ Both these opcodes have been repriced before, and the client internals for manag
 
 This is the implementation for the new opcode in go-ethereum:
 
-```golang
+```go
 
 func opSelfBalance(pc *uint64, interpreter *EVMInterpreter, contract *Contract, memory *Memory, stack *Stack) ([]byte, error) {
 	stack.push(interpreter.intPool.get().Set(interpreter.evm.StateDB.GetBalance(contract.Address())
diff --git a/content/01895.md b/content/01895.md
index 7a2b0c75..999d6070 100644
--- a/content/01895.md
+++ b/content/01895.md
@@ -40,19 +40,19 @@ The proposed cycle has been introduced in [Scalable Zero Knowledge via Cycles of
 
 The groups `G_1` and `G_2` are cyclic groups of prime order :
 
-```.
+```
 q = 475922286169261325753349249653048451545124878552823515553267735739164647307408490559963137
 ```
 
 `G_1` is defined over the field `F_p` of prime order :
 
-```.
+```
 p = 475922286169261325753349249653048451545124879242694725395555128576210262817955800483758081
 ```
 
 with generator P:
 
-```.
+```
 P = (
     60760244141852568949126569781626075788424196370144486719385562369396875346601926534016838,
     363732850702582978263902770815145784459747722357071843971107674179038674942891694705904306
@@ -63,7 +63,7 @@ Both p and q can be written in 298 bits.
 
 The group G_1 is defined on the curve defined by the equation `Y² = X³ + aX + b` where:
 
-```.
+```
     a = 2
     b = 423894536526684178289416011533888240029318103673896002803341544124054745019340795360841685
 ```
@@ -72,14 +72,14 @@ The twisted group G_2 is defined over the field `F_p^2 = F_p / <<To be completed
 
 The twisted group G_2 is defined on the curve defined by the equation `Y² = X² + aX + b` where :
 
-```.
+```
     a = 34 + i * 0
     b = 0 + i * 67372828414711144619833451280373307321534573815811166723479321465776723059456513877937430
 ```
 
 G_2 generator is generated by :
 
-```.
+```
     P2 = (
         438374926219350099854919100077809681842783509163790991847867546339851681564223481322252708 +
         i * 37620953615500480110935514360923278605464476459712393277679280819942849043649216370485641,
@@ -92,7 +92,7 @@ G_2 generator is generated by :
 
 The following operations and their gas cost would be implemented
 
-```.
+```
 MNT_X_ADD = <<To be estimated>>
 MNT_X_MUL = <<To be estimated>>
 MNT_X_PAIRING = <<To be estimated>>
@@ -104,13 +104,13 @@ Where `X` is either 4.
 
 The curves points P(X, Y) over F_p are represented in their compressed form C(X, Y):
 
-```.
+```
     C = X | s
 ```
 
 where `s` represents `Y` as follow:
 
-```.
+```
     |  `s'`  | `Y`                      |
     |--------|--------------------------|
     | `0x00` | Point at infinity        |
@@ -120,7 +120,7 @@ where `s` represents `Y` as follow:
 
 Compression operation from affine coordinate is trivial:
 
-```.
+```
     s = 0x02 | (s & 0x01)
 ```
 
diff --git a/content/02315.md b/content/02315.md
index 837c2ef4..59ed0d45 100644
--- a/content/02315.md
+++ b/content/02315.md
@@ -211,7 +211,8 @@ Using `RJUMPSUB` versus `JUMP` saves _41 - 19 = 22 gas_ — a _54%_ improvement.
 Of course in cases like this one we can optimize the tail call, so that the return from `SQUARE` actually returns from `TEST_SQUARE`.
 
 Tail call optimization, using `RJUMPSUB` and `RETURNSUB`:
-```SQUARE:
+```
+SQUARE:
     dup1            ; 3 gas
     mul             ; 5 gas
     returnsub       ; 3 gas
diff --git a/content/01418.md b/content/01418.md
index 26abe1c6..95784bd8 100644
--- a/content/01418.md
+++ b/content/01418.md
@@ -48,7 +48,7 @@ A new transaction type is introduced. Whereas [EIP-1559](./01559.md) introduced
 
 A new subroutine, paying for rent, is established as such:
 
-```pseudocode
+```
 PAYRENT(account)
     blocks_to_pay = NUMBER - σ[account]_rentLastPaid
     cost_per_block = RENT_ACCOUNT_COST + RENT_WORD_COST * (⌈∥σ[account]_code∥ / 32⌉ + * σ[a]_storageWords)
diff --git a/content/00001/index.md b/content/00001/index.md
index 9439a34d..4245dfd2 100644
--- a/content/00001/index.md
+++ b/content/00001/index.md
@@ -212,7 +212,7 @@ Which renders to:
 
 Permitted Execution Client Specifications URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^(https://github.com/ethereum/execution-specs/(blob|commit)/[0-9a-f]{40}/.*|https://github.com/ethereum/execution-specs/tree/[0-9a-f]{40}/.*)$
 ```
 
@@ -230,11 +230,11 @@ Which renders to:
 
 Permitted Execution Specification Tests URLs must anchor to a specific commit, and so must match one of these regular expressions:
 
-```regex
+```
 ^https://(www\.)?github\.com/ethereum/execution-spec-tests/(blob|tree)/[a-f0-9]{40}/.+$
 ```
 
-```regex
+```
 ^https://(www\.)?github\.com/ethereum/execution-spec-tests/commit/[a-f0-9]{40}$
 ```
 
@@ -252,7 +252,7 @@ Which renders to:
 
 Permitted Consensus Layer Specifications URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^https://github.com/ethereum/consensus-specs/(blob|commit)/[0-9a-f]{40}/.*$
 ```
 
@@ -270,7 +270,7 @@ Which renders as:
 
 Permitted Networking Specifications URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^https://github.com/ethereum/devp2p/(blob|commit)/[0-9a-f]{40}/.*$
 ```
 
@@ -288,7 +288,7 @@ Which renders as:
 
 Permitted Networking Specifications URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^https://github.com/ethereum/portal-network-specs/(blob|commit)/[0-9a-f]{40}/.*$
 ```
 
@@ -306,7 +306,7 @@ Which renders as:
 
 Permitted W3C recommendation URLs MUST anchor to a specification in the technical reports namespace with a date, and so MUST match this regular expression:
 
-```regex
+```
 ^https://www\.w3\.org/TR/[0-9][0-9][0-9][0-9]/.*$
 ```
 
@@ -324,7 +324,7 @@ Which renders as:
 
 Permitted WHATWG specification URLs must anchor to a specification defined in the `spec` subdomain (idea specifications are not allowed) and to a commit snapshot, and so must match this regular expression:
 
-```regex
+```
 ^https:\/\/[a-z]*\.spec\.whatwg\.org/commit-snapshots/[0-9a-f]{40}/$
 ```
 
@@ -344,7 +344,7 @@ Which renders as:
 
 Permitted IETF specification URLs MUST anchor to a specification with an assigned RFC number (meaning cannot reference internet drafts), and so MUST match this regular expression:
 
-```regex
+```
 ^https:\/\/www.rfc-editor.org\/rfc\/.*$
 ```
 
@@ -362,7 +362,7 @@ Which renders to:
 
 Permitted Bitcoin Improvement Proposal URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^(https://github.com/bitcoin/bips/blob/[0-9a-f]{40}/bip-[0-9]+\.mediawiki)$
 ```
 
@@ -392,7 +392,7 @@ Which renders to:
 
 Permitted Chain Agnostic URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^(https://github.com/ChainAgnostic/CAIPs/blob/[0-9a-f]{40}/CAIPs/caip-[0-9]+\.md)$
 ```
 
@@ -410,7 +410,7 @@ Which renders to:
 
 Permitted Yellow Paper URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^(https://github\.com/ethereum/yellowpaper/blob/[0-9a-f]{40}/paper\.pdf)$
 ```
 
@@ -428,7 +428,7 @@ Which renders to:
 
 Permitted Execution Client Specification Tests URLs must anchor to a specific commit, and so must match this regular expression:
 
-```regex
+```
 ^(https://github.com/ethereum/execution-spec-tests/(blob|commit)/[0-9a-f]{40}/.*|https://github.com/ethereum/execution-spec-tests/tree/[0-9a-f]{40}/.*)$
 ```
 
diff --git a/content/07756.md b/content/07756.md
index 09f8ed23..edafe0c5 100644
--- a/content/07756.md
+++ b/content/07756.md
@@ -223,7 +223,7 @@ This is the trace output from the Ethereum Execution Specification Test from one
 parameterized executions of [test_eof_functions_contract_call_succeed](https://github.com/ethereum/execution-spec-tests/blob/632d151ea8a71d09a3a0acbdb85d97fa18c8456b/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_execution_function.py#L304-L335).
 Memory and return data is disabled.
 
-```json lines
+```jsonl
 {"pc":0,"op":"0x60","gas":49979000,"gasCost":3,"memSize":0,"stack":[],"depth":1,"refund":0,"opName":"PUSH1"}
 {"pc":2,"op":"0x60","gas":49978997,"gasCost":3,"memSize":0,"stack":["0x0"],"depth":1,"refund":0,"opName":"PUSH1"}
 {"pc":4,"op":"0x60","gas":49978994,"gasCost":3,"memSize":0,"stack":["0x0","0x0"],"depth":1,"refund":0,"opName":"PUSH1"}
