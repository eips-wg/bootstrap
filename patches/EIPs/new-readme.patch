diff --git a/README.md b/README.md
index 7463a87d..4ac6f062 100644
--- a/README.md
+++ b/README.md
@@ -1,87 +1,97 @@
-# Ethereum Improvement Proposals (EIPs)
-
-> **_ATTENTION_**: The EIPs repository has recently [undergone](https://github.com/ethereum/EIPs/pull/7206) a separation of ERCs and EIPs. ERCs are now accessible at [https://github.com/ethereum/ercs](https://github.com/ethereum/ercs). All new ERCs and updates to existing ones must be directed at this new repository. The editors apologize for this inconvenience.
-
-The goal of the EIP project is to standardize and provide high-quality documentation for Ethereum itself and conventions built upon it. This repository tracks past and ongoing improvements to Ethereum in the form of Ethereum Improvement Proposals (EIPs). [EIP-1](https://eips.ethereum.org/EIPS/eip-1) governs how EIPs are published.
-
-The [status page](https://eips.ethereum.org/) tracks and lists EIPs, which can be divided into the following categories:
-
-- [Core EIPs](https://eips.ethereum.org/core) are improvements to the Ethereum consensus protocol.
-- [Networking EIPs](https://eips.ethereum.org/networking) specify the peer-to-peer networking layer of Ethereum.
-- [Interface EIPs](https://eips.ethereum.org/interface) standardize interfaces to Ethereum, which determine how users and applications interact with the blockchain.
-- [ERCs](https://eips.ethereum.org/erc) specify application layer standards, which determine how applications running on Ethereum can interact with each other.
-- [Meta EIPs](https://eips.ethereum.org/meta) are miscellaneous improvements that nonetheless require some sort of consensus.
-- [Informational EIPs](https://eips.ethereum.org/informational) are non-standard improvements that do not require any form of consensus.
-
-**Before you write an EIP, ideas MUST be thoroughly discussed on [Ethereum Magicians](https://ethereum-magicians.org/) or [Ethereum Research](https://ethresear.ch/t/read-this-before-posting/8). Once consensus is reached, thoroughly read and review [EIP-1](https://eips.ethereum.org/EIPS/eip-1), which describes the EIP process.**
-
-Please note that this repository is for documenting standards and not for help implementing them. These types of inquiries should be directed to the [Ethereum Stack Exchange](https://ethereum.stackexchange.com). For specific questions and concerns regarding EIPs, it's best to comment on the relevant discussion thread of the EIP denoted by the `discussions-to` tag in the EIP's preamble.
-
-If you would like to become an EIP Editor, please read [EIP-5069](./EIPS/eip-5069.md).
-
-## Preferred Citation Format
-
-The canonical URL for an EIP that has achieved draft status at any point is at <https://eips.ethereum.org/>. For example, the canonical URL for EIP-1 is <https://eips.ethereum.org/EIPS/eip-1>.
-
-Consider any document not published at <https://eips.ethereum.org/> as a working paper. Additionally, consider published EIPs with a status of "draft", "review", or "last call" to be incomplete drafts, and note that their specification is likely to be subject to change.
-
-## Validation and Automerging
-
-All pull requests in this repository must pass automated checks before they can be automatically merged:
+# EIPs vs. ERCs
 
-- [eip-review-bot](https://github.com/ethereum/eip-review-bot/) determines when PRs can be automatically merged [^1]
-- EIP-1 rules are enforced using [`eipw`](https://github.com/ethereum/eipw)[^2]
-- HTML formatting and broken links are enforced using [HTMLProofer](https://github.com/gjtorikian/html-proofer)[^2]
-- Spelling is enforced with [CodeSpell](https://github.com/codespell-project/codespell)[^2]
-  - False positives sometimes occur. When this happens, please submit a PR editing [.codespell-whitelist](https://github.com/ethereum/EIPs/blob/master/config/.codespell-whitelist) and **ONLY** .codespell-whitelist
-- Markdown best practices are checked using [markdownlint](https://github.com/DavidAnson/markdownlint)[^2]
+> [!IMPORTANT]
+> Please direct application-level proposals (ERCs) to [`ethereum/ERCs`] and all
+> other proposals (EIPs) to [`ethereum/EIPs`].
 
-[^1]: https://github.com/ethereum/EIPs/blob/master/.github/workflows/auto-review-bot.yml
-[^2]: https://github.com/ethereum/EIPs/blob/master/.github/workflows/ci.yml
-
-It is possible to run the EIP validator locally:
-
-Make sure to add cargo's `bin` directory to your environment (typically `$HOME/.cargo/bin` in your `PATH` environment variable)
+# Ethereum Improvement Proposals (EIPs)
 
-```sh
-cargo install eipw
-eipw --config ./config/eipw.toml <INPUT FILE / DIRECTORY>
-```
+The EIP project standardizes and provides high-quality documentation for
+Ethereum itself and conventions built upon it. This repository tracks past and
+ongoing improvements to Ethereum in the form of Ethereum Improvement
+Proposals (EIPs). [EIP-1] governs how EIPs are published.
 
-## Build the status page locally
+## Taxonomy
 
-### Install prerequisites
+The [status page][status] tracks and lists EIPs, which can be divided into the
+following types and categories:
 
-1. Open Terminal.
+- [Core EIPs] are improvements to the Ethereum consensus protocol.
+- [Networking EIPs] specify the peer-to-peer networking layer of Ethereum.
+- [Interface EIPs] standardize interfaces to Ethereum, which determine how
+  users and applications interact with the blockchain.
+- [ERCs] specify application layer standards, which determine how applications
+  running on Ethereum can interact with each other.
+- [Meta EIPs] are miscellaneous improvements that nonetheless require some sort
+  of consensus.
+- [Informational EIPs] are non-standard improvements that do not require any
+  form of consensus.
 
-2. Check whether you have Ruby 3.1.4 installed. Later [versions are not supported](https://stackoverflow.com/questions/14351272/undefined-method-exists-for-fileclass-nomethoderror).
+## Contributing
 
-   ```sh
-   ruby --version
-   ```
+> [!WARNING]
+> Before you write an EIP, ideas MUST be thoroughly discussed on
+> [Ethereum Magicians][ethmag] or [Ethereum Research][ethres]. Once consensus
+> is reached, thoroughly read and review [EIP-1], which describes the EIP
+> process.
 
-3. If you don't have Ruby installed, install Ruby 3.1.4.
+To create a new proposal, **copy** the [Proposal Template][template] into the
+[`contents`] directory and rename it to `99999.md` (or `99999/index.md` if you
+have additional assets). The template has more detailed instructions.
 
-4. Install Bundler:
+This repository is for documenting standards and not for help implementing
+them. These types of inquiries should be directed to the
+[Ethereum Stack Exchange][ethex]. For specific questions and concerns regarding
+EIPs, it's best to comment on the relevant discussion thread of the EIP denoted
+by the `discussions-to` tag in the EIP's preamble.
 
-   ```sh
-   gem install bundler
-   ```
+If you would like to become an EIP Editor, please read [EIP-5069].
 
-5. Install dependencies:
+### Validation and Auto-merging
 
-   ```sh
-   bundle install
-   ```
+All pull requests in this repository must pass checks before they can be
+automatically merged:
 
-### Build your local Jekyll site
+- [eip-review-bot] determines when PRs can be automatically merged [^1]
+- EIP-1 rules are enforced using [`eipw`] [^2]
+- Markdown best practices are checked using [markdownlint] [^2]
 
-1. Bundle assets and start the server:
+### Building Locally
 
-   ```sh
-   bundle exec jekyll serve
-   ```
+It is possible to run the above checks and preview how proposals will render
+using [`build-eips`]. See its documentation for more details.
 
-2. Preview your local Jekyll site in your web browser at `http://localhost:4000`.
+## Preferred Citation Format
 
-More information on Jekyll and GitHub Pages [here](https://docs.github.com/en/enterprise/2.14/user/articles/setting-up-your-github-pages-site-locally-with-jekyll).
+The canonical URL for an EIP that has achieved draft status at any point is at
+<https://eips.ethereum.org/>. For example, the canonical URL for EIP-1 is
+<https://eips.ethereum.org/1/>.
+
+Consider any document not published at <https://eips.ethereum.org/> as a
+working paper. Additionally, consider published EIPs with a status of "draft",
+"review", or "last call" to be incomplete drafts, and note that their
+specification is likely to be subject to change.
+
+[^1]: <https://github.com/ethereum/EIPs/blob/master/.github/workflows/auto-review-bot.yml>
+[^2]: <https://github.com/ethereum/EIPs/blob/master/.github/workflows/ci.yml>
+
+[`build-eips`]: https://github.com/ethereum/build-eips
+[markdownlint]: https://github.com/DavidAnson/markdownlint
+[`eipw`]: https://github.com/ethereum/eipw
+[eip-review-bot]: https://github.com/ethereum/eip-review-bot/
+[`ethereum/ERCs`]: https://github.com/ethereum/ERCs
+[`ethereum/EIPs`]: https://github.com/ethereum/EIPs
+[EIP-1]: https://eips.ethereum.org/1/
+[ethmag]: https://ethereum-magicians.org/
+[ethres]: https://ethresear.ch/t/read-this-before-posting/8
+[template]: https://github.com/ethereum/EIPs/blob/master/docs/template.md
+[`contents`]: https://github.com/ethereum/EIPs/tree/master/contents
+[ethex]: https://ethereum.stackexchange.com
+[status]: https://eips.ethereum.org/
+[Core EIPs]: https://eips.ethereum.org/category/core/
+[Networking EIPs]: https://eips.ethereum.org/category/networking/
+[Interface EIPs]: https://eips.ethereum.org/category/interface/
+[ERCs]: https://eips.ethereum.org/category/erc/
+[Meta EIPs]: https://eips.ethereum.org/type/meta/
+[Informational EIPs]: https://eips.ethereum.org/type/informational/
+[EIP-5069]: https://eips.ethereum.org/5069/
